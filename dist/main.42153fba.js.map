{"version":3,"sources":["js/main.js"],"names":["thumbPositionX","thumbOffsetX","track","document","getElementById","thumb","run","views","querySelector","price","checkbox","isDown","rect","getBoundingClientRect","maxOffset","right","left","minOffset","step","minValue","maxValue","isChecked","currentViews","getPositionFromViews","Math","round","thumbPressed","e","isMobile","offsetLeft","changedTouches","clientX","classList","add","thumbFree","remove","updateThumbPosition","currentLeft","calcCurrentViewsLabel","innerHTML","calcCurrentPrice","style","width","moveThumb","preventDefault","addEventListener","target","checked","window","cLeft","currentOffset","currentMin","currentMax"],"mappings":"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","file":"main.42153fba.js","sourceRoot":"..\\src","sourcesContent":["// import \"./../sass/main.scss\";\r\n/*import \"./../sass/_base.scss\"; */\r\n\r\nconst track = document.getElementById(\"slider-track\");\r\nconst thumb = document.getElementById(\"slider-thumb\");\r\nconst run = document.getElementById(\"slider-run\");\r\nconst views = document.querySelector(\".pricing-card__top-views\");\r\nconst price = document.querySelector(\".pricing-card__top-price--number\");\r\n\r\nconst checkbox = document.getElementById(\"payment-checkbox\");\r\n\r\nlet thumbPositionX;\r\nlet thumbOffsetX;\r\nlet isDown = false;\r\n\r\nlet rect = track.getBoundingClientRect();\r\nlet maxOffset = rect.right - rect.left;\r\nconst minOffset = 0;\r\nlet step = maxOffset / 4;\r\n\r\nlet minValue = 10;\r\nlet maxValue = 1000;\r\n\r\nlet isChecked = false;\r\nlet currentViews = 100;\r\n\r\n//checkbox listener\r\n\r\ncheckbox.addEventListener(\"change\", (e) => {\r\n  if (e.target.checked) {\r\n    isChecked = true;\r\n  } else {\r\n    isChecked = false;\r\n  }\r\n});\r\n\r\n/**\r\n * - 10K pageviews / $8 per month\r\n- 50K pageviews / $12 per month\r\n- 100K pageviews / $16 per month\r\n- 500k pageviews / $24 per month\r\n- 1M pageviews / $36 per month\r\n * 0-49 50-99 100-499 499-1000\r\n * \r\n */\r\n\r\n//INTIALIZE VALUES ON ROTATION CHANGE AND REPOSITION THUMB\r\n\r\nwindow.addEventListener(\"resize\", (e) => {\r\n  const track = document.getElementById(\"slider-track\");\r\n  rect = track.getBoundingClientRect();\r\n  maxOffset = rect.right - rect.left;\r\n  let step = maxOffset / 4;\r\n  let cLeft = getPositionFromViews(currentViews, maxOffset, step);\r\n  thumb.style.left = thumb.style.left = cLeft + \"px\";\r\n  run.style.width = cLeft + \"px\";\r\n});\r\n\r\nfunction getPositionFromViews(views, maxOffset, step) {\r\n  let min = 0;\r\n  if (views === 10) {\r\n    return 0;\r\n  } else if (views < 50) {\r\n    return Math.round((step / 40) * views);\r\n  } else if (views < 100) {\r\n    return step + (step / 49) * (views - 50);\r\n  } else if (views < 500) {\r\n    return 2 * step + (step / 500) * (views - 100);\r\n  } else if (views < 1000) {\r\n    return 3 * step + (step / 500) * (views - 500);\r\n  } else {\r\n    return maxOffset;\r\n  }\r\n}\r\n\r\n//---------------------- MOVING THE SLIDER THUMB------------------------------------------\r\n\r\nfunction thumbPressed(e, isMobile) {\r\n  isDown = true;\r\n  if (isMobile) {\r\n    thumbOffsetX = thumb.offsetLeft - e.changedTouches[0].clientX;\r\n  } else {\r\n    thumbOffsetX = thumb.offsetLeft - e.clientX;\r\n  }\r\n  thumb.classList.add(\"pressed\");\r\n}\r\n\r\nfunction thumbFree() {\r\n  isDown = false;\r\n  thumb.classList.remove(\"pressed\");\r\n}\r\n\r\nfunction updateThumbPosition(currentLeft) {\r\n  if (currentLeft <= maxOffset && currentLeft >= minOffset) {\r\n    currentViews = calcCurrentViewsLabel(currentLeft);\r\n    if (currentViews === 1000) {\r\n      views.innerHTML = `1M PageViews`;\r\n    } else {\r\n      views.innerHTML = `${currentViews}K PageViews`;\r\n    }\r\n    price.innerHTML = `$${calcCurrentPrice(currentViews)}.00`;\r\n    thumb.style.left = thumb.style.left = currentLeft + \"px\";\r\n    run.style.width = currentLeft + \"px\";\r\n  } else if (currentLeft > maxOffset) {\r\n    views.innerHTML = `1M PageViews`;\r\n    price.innerHTML = `$${calcCurrentPrice(maxValue)}.00`;\r\n    thumb.style.left = thumb.style.left = maxOffset + \"px\";\r\n    run.style.width = maxOffset + \"px\";\r\n    currentViews = 1000;\r\n  } else if (currentLeft < minOffset) {\r\n    views.innerHTML = `${calcCurrentViewsLabel(minOffset)}K PageViews`;\r\n    price.innerHTML = `$${calcCurrentPrice(minOffset)}.00`;\r\n    thumb.style.left = thumb.style.left = minOffset + \"px\";\r\n    run.style.width = minOffset + \"px\";\r\n    currentViews = 10;\r\n  }\r\n}\r\n\r\nfunction moveThumb(e, isMobile) {\r\n  e.preventDefault();\r\n  if (isDown) {\r\n    if (isMobile) {\r\n      thumbPositionX = e.changedTouches[0].clientX;\r\n    } else {\r\n      thumbPositionX = e.clientX;\r\n    }\r\n  }\r\n  let currentLeft = thumbPositionX + thumbOffsetX;\r\n  updateThumbPosition(currentLeft);\r\n}\r\n\r\n// -------------------------- ADDING SLIDER LISTENERS ------------------------------\r\n\r\n//SLIDER LISTENERS ON DESKTOP (MOUSE)\r\nthumb.addEventListener(\r\n  \"mousedown\",\r\n  (e) => {\r\n    thumbPressed(e, false);\r\n  },\r\n  false\r\n);\r\n\r\ndocument.addEventListener(\"mouseup\", thumbFree);\r\n\r\nthumb.addEventListener(\"mousemove\", (e) => {\r\n  moveThumb(e, false);\r\n});\r\n\r\n//SLIDER LISTENERS ON MOBILE (TOUCHSCREEN)\r\n\r\nthumb.addEventListener(\"touchstart\", (e) => {\r\n  thumbPressed(e, true);\r\n});\r\n\r\nthumb.addEventListener(\"touchend\", thumbFree, false);\r\n\r\nthumb.addEventListener(\"touchmove\", (e) => {\r\n  moveThumb(e, true);\r\n});\r\n\r\nconst calcCurrentViewsLabel = (offsetLeft) => {\r\n  let currentOffset = offsetLeft;\r\n\r\n  if (offsetLeft < step) {\r\n    minValue = 10;\r\n    maxValue = 49;\r\n  } else if (offsetLeft < step * 2) {\r\n    minValue = 50;\r\n    maxValue = 99;\r\n    currentOffset = offsetLeft - step;\r\n    currentMin = step;\r\n    currentMax = step * 2 - 1;\r\n  } else if (offsetLeft < step * 3) {\r\n    minValue = 100;\r\n    maxValue = 499;\r\n    currentOffset = offsetLeft - step * 2;\r\n    currentMin = step * 2;\r\n    currentMax = step * 3 - 1;\r\n  } else {\r\n    currentMin = step * 3;\r\n    currentMax = maxOffset;\r\n    currentOffset = offsetLeft - step * 3;\r\n    minValue = 500;\r\n    maxValue = 1000;\r\n  }\r\n\r\n  return Math.round(minValue + (currentOffset / step) * (maxValue - minValue));\r\n};\r\n\r\nconst calcCurrentPrice = (currentViews) => {\r\n  let price;\r\n  if (currentViews < 50) {\r\n    price = 8;\r\n  } else if (currentViews < 100) {\r\n    price = 12;\r\n  } else if (currentViews < 500) {\r\n    price = 16;\r\n  } else if (currentViews < 1000) {\r\n    price = 24;\r\n  } else {\r\n    price = 36;\r\n  }\r\n\r\n  if (isChecked) {\r\n    return price - price * 0.25;\r\n  } else {\r\n    return price;\r\n  }\r\n};\r\n"]}